@top Program { Line* }

Line { Content (NewLine | EOF) }

Content { (LabelDefinition | Instruction | Comment) Comment? }

LabelDefinition { Label ~statement ":" }

Instruction { InstructionName ~statement (Number | Register | Dereference | Label)* }

Number { Binary | Decimal | Hexadecimal }

@skip { Space }

@tokens {
    EOF { @eof }
    NewLine { $[\n] }
    Space { @whitespace+ }
    Comment { "#" ![\n]* }
    Binary { ("0B" | "0b") ("0" | "1")+ "."? ("0" | "1")* }
    Hexadecimal { ("0X" | "0x") (@digit | $[a-fA-F])+ "."? (@digit | $[a-fA-F])* }
    Decimal { @digit+ "."? @digit* }
    Dereference { @digit* "(" Register ")" }
    Register {"$" (@asciiLetter | @digit)+ }
    InstructionName { @asciiLowercase+ }
    Label { (@asciiLetter | @digit)+ }
    @precedence { NewLine, Space, Binary, Hexadecimal, Decimal, Dereference, Register, InstructionName, Label}
}
